[[inputs.modbus]]
  ## Connection Configuration
  ##
  ## The plugin supports connections to PLCs via MODBUS/TCP or
  ## via serial line communication in binary (RTU) or readable (ASCII) encoding
  ##
  ## Device name
  name = "Inverter"

  ## Slave ID - addresses a MODBUS device on the bus
  ## Range: 0 - 255 [0 = broadcast; 248 - 255 = reserved]
  slave_id = 1

  ## Timeout for each request
  timeout = "1s"
  interval = "30s"

  ## Maximum number of retries and the time to wait between retries
  ## when a slave-device is busy.
  busy_retries = 3
  busy_retries_wait = "200ms"

  # TCP - connect via Modbus/TCP
#  controller = "tcp://localhost:502"

  ## Serial (RS485; RS232)
  controller = "file:///dev/ttyInverter"
  baud_rate = 9600
  data_bits = 8
  parity = "N"
  stop_bits = 1
  transmission_mode = "RTU"


  ## Measurements
  ##

  ## Digital Variables, Discrete Inputs and Coils
  ## measurement - the (optional) measurement name, defaults to "modbus"
  ## name        - the variable name
  ## address     - variable address

#  discrete_inputs = [
#    { name = "start",          address = [0]},
#    { name = "stop",           address = [1]},
#    { name = "reset",          address = [2]},
#    { name = "emergency_stop", address = [3]},
#  ]
#  coils = [
#    { name = "motor1_run",     address = [0]},
#    { name = "motor1_jog",     address = [1]},
#    { name = "motor1_stop",    address = [2]},
#  ]

  ## Analog Variables, Input Registers and Holding Registers
  ## measurement - the (optional) measurement name, defaults to "modbus"
  ## name        - the variable name
  ## byte_order  - the ordering of bytes
  ##  |---AB, ABCD   - Big Endian
  ##  |---BA, DCBA   - Little Endian
  ##  |---BADC       - Mid-Big Endian
  ##  |---CDAB       - Mid-Little Endian
  ## data_type  - INT16, UINT16, INT32, UINT32, INT64, UINT64, FLOAT32-IEEE (the IEEE 754 binary representation)
  ##              FLOAT32 (deprecated), FIXED, UFIXED (fixed-point representation on input)
  ## scale      - the final numeric variable representation
  ## address    - variable address

#  holding_registers = [
#    { name = "Vnormal",       byte_order = "AB",   data_type = "UINT16", scale=0.1,   address = [8]},
#    { name = "Vpv_start",     byte_order = "AB",   data_type = "INT16", scale=1.0,   address = [75]},
#  ]

  input_registers = [
    { name = "status_code",    byte_order = "AB",   data_type = "INT16",   scale=1.0,  address = [0]},
    { name = "power_input",    byte_order = "ABCD", data_type = "UFIXED",  scale=0.1,  address = [1,2]},
    { name = "Vdc1",           byte_order = "AB",   data_type = "UFIXED",  scale=0.1,  address = [3]},
    { name = "Adc1",           byte_order = "AB",   data_type = "UFIXED",  scale=0.1,  address = [4]},
    { name = "Fac",            byte_order = "AB",   data_type = "UFIXED",  scale=0.01, address = [13]},
    { name = "Vac",            byte_order = "AB",   data_type = "UFIXED",  scale=0.1,  address = [14]},
    { name = "Aac",            byte_order = "AB",   data_type = "UFIXED",  scale=0.1,  address = [15]},
    { name = "power_output",   byte_order = "ABCD", data_type = "UFIXED",  scale=0.1,  address = [16,17]},
    { name = "energy_today",   byte_order = "ABCD", data_type = "UFIXED",  scale=0.1,  address = [26,27]},
    { name = "energy_total",   byte_order = "ABCD", data_type = "UFIXED",  scale=0.1,  address = [28,29]},
    { name = "time_total",     byte_order = "ABCD", data_type = "UFIXED",  scale=0.5,  address = [30,31]},
    { name = "temperature",    byte_order = "AB",   data_type = "UFIXED",  scale=0.1,  address = [32]},
    { name = "fault_code",     byte_order = "AB",   data_type = "UINT16",  scale=1.0,  address = [40]},
    { name = "derating_mode",  byte_order = "AB",   data_type = "UINT16",  scale=1.0,  address = [47]},
    { name = "edc1_total",     byte_order = "ABCD", data_type = "UFIXED",  scale=0.1,  address = [56,57]},
    { name = "reactive_power", byte_order = "ABCD", data_type = "UFIXED",  scale=0.1,  address = [58,59]},
    { name = "warning_code",   byte_order = "AB",   data_type = "UINT16",  scale=1.0,  address = [64]},
    { name = "pid_fault",      byte_order = "AB",   data_type = "UINT16",  scale=1.0,  address = [89]},
    { name = "pid_status",     byte_order = "AB",   data_type = "UINT16",  scale=1.0,  address = [117]},
#    { name = "pump1_speed",  byte_order = "ABCD", data_type = "INT32",   scale=1.0,     address = [3,4]},
  ]
  [inputs.modbus.tags]
    influxdb_database = "power_plant"


## processors
[[processors.enum]]
  [[processors.enum.mapping]]
    ## Name of the field to map
    field = "status_code"

    ## Name of the tag to map
    # tag = "status"

    ## Destination tag or field to be used for the mapped value.  By default the
    ## source tag or field is used, overwriting the original value.
    dest = "status"

    ## Default value to be used for all values not contained in the mapping
    ## table.  When unset and no match is found, the original field will remain 
    ## unmodified and the destination tag or field will not be created.
    # default = 0

    ## Table of mappings
    [processors.enum.mapping.value_mappings]
      0 = "waiting"
      1 = "normal"
      3 = "fault"
